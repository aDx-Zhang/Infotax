com.google.firebase.concurrent.ExecutorsRegistrar
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.dexterous.flutterlocalnotifications.NotificationStyle
androidx.appcompat.widget.SearchView
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
android.support.v4.media.RatingCompat
androidx.media.AudioAttributesCompatParcelizer
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
com.google.android.gms.measurement.AppMeasurementService
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.activity.ComponentActivity$5
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.material.datepicker.MaterialCalendarGridView
androidx.core.app.RemoteActionCompat
androidx.viewpager2.adapter.FragmentStateAdapter$2
io.flutter.plugins.urllauncher.WebViewActivity
com.google.firebase.iid.Registrar
androidx.activity.ComponentActivity$4
com.google.android.material.search.SearchView$Behavior
com.google.android.material.transformation.ExpandableTransformationBehavior
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.media.AudioAttributesImpl
kotlin.internal.jdk8.JDK8PlatformImplementations
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
androidx.core.app.RemoteActionCompatParcelizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.datatransport.cct.CctBackendFactory
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
kotlinx.coroutines.internal.StackTraceRecoveryKt
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.appcompat.app.AlertController$RecycleListView
androidx.core.graphics.drawable.IconCompatParcelizer
android.support.v4.media.session.ParcelableVolumeInfo
com.google.android.material.textfield.TextInputEditText
androidx.recyclerview.widget.LinearLayoutManager
android.support.v4.media.MediaDescriptionCompat
androidx.startup.InitializationProvider
androidx.constraintlayout.helper.widget.Flow
com.google.android.gms.common.api.Scope
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.infotaxsquare.lashari.info_tax_square.info_tax_square.MainActivity
android.support.v4.media.session.PlaybackStateCompat
com.google.android.gms.common.api.GoogleApiActivity
androidx.lifecycle.SavedStateHandleAttacher
androidx.transition.FragmentTransitionSupport
android.support.v4.media.AudioAttributesCompatParcelizer
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.core.graphics.drawable.IconCompat
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.media.AudioAttributesImplApi26
com.google.firebase.iid.FirebaseInstanceId
com.google.android.gms.common.SupportErrorDialogFragment
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.appcompat.widget.FitWindowsFrameLayout
com.google.android.material.datepicker.MaterialCalendar
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
com.google.android.material.datepicker.MaterialDatePicker
com.google.firebase.messaging.FirebaseMessaging
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
io.flutter.embedding.engine.FlutterJNI
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
androidx.appcompat.widget.FitWindowsLinearLayout
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
androidx.activity.result.ActivityResultRegistry$1
com.google.android.material.snackbar.SnackbarContentLayout
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
androidx.annotation.Keep
com.google.android.material.chip.Chip
com.google.android.material.internal.BaselineLayout
com.google.android.material.internal.NavigationMenuItemView
androidx.media.AudioAttributesImplApi21Parcelizer
android.support.v4.media.AudioAttributesImplBaseParcelizer
io.flutter.plugin.platform.SingleViewPresentation
com.dexterous.flutterlocalnotifications.models.MessageDetails
com.google.firebase.datatransport.TransportRegistrar
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.google.android.gms.measurement.AppMeasurement
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.constraintlayout.widget.Barrier
com.google.android.material.internal.TouchObserverFrameLayout
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.google.android.material.appbar.MaterialToolbar
androidx.versionedparcelable.CustomVersionedParcelable
com.google.firebase.components.ComponentDiscoveryService
androidx.emoji2.text.EmojiCompatInitializer
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.appcompat.widget.ViewStubCompat
com.google.android.material.timepicker.TimePickerView
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
androidx.fragment.app.DialogFragment
androidx.lifecycle.LegacySavedStateHandleController$1
com.google.android.material.transformation.ExpandableBehavior
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.activity.ImmLeaksCleaner
com.google.android.material.internal.NavigationMenuView
com.google.firebase.components.ComponentRegistrar
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.appcompat.widget.Toolbar
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.firebase.iid.FirebaseInstanceIdReceiver
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.material.behavior.SwipeDismissBehavior
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.firebase.provider.FirebaseInitProvider
androidx.appcompat.widget.ActionBarContextView
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
androidx.appcompat.widget.DialogTitle
com.google.android.material.datepicker.MaterialTextInputPicker
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.google.android.material.internal.ClippableRoundedCornerLayout
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.android.gms.common.api.Status
com.google.android.gms.common.api.internal.zzd
androidx.versionedparcelable.ParcelImpl
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
kotlinx.coroutines.android.AndroidDispatcherFactory
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.google.android.material.timepicker.ChipTextInputComboView
kotlin.internal.jdk7.JDK7PlatformImplementations
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.dexterous.flutterlocalnotifications.models.PersonDetails
com.google.android.material.transformation.FabTransformationBehavior
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
androidx.media.AudioAttributesImplApi21
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.fragment.app.FragmentManager$6
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
com.dexterous.flutterlocalnotifications.models.BitmapSource
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
android.support.v4.media.MediaBrowserCompat$MediaItem
com.dexterous.flutterlocalnotifications.models.Time
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.google.android.gms.common.annotation.KeepName
androidx.appcompat.widget.ActionBarContainer
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.constraintlayout.widget.ConstraintLayout
com.google.android.material.transformation.FabTransformationSheetBehavior
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.core.app.CoreComponentFactory
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.recyclerview.widget.GridLayoutManager
androidx.webkit.WebViewClientCompat
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.emoji2.text.EmojiCompatInitializer$1
androidx.savedstate.Recreator
com.dexterous.flutterlocalnotifications.models.SoundSource
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
androidx.media.AudioAttributesImplBase
com.google.android.material.button.MaterialButton
androidx.recyclerview.widget.RecyclerView
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
androidx.media.AudioAttributesImplApi26Parcelizer
io.flutter.plugins.GeneratedPluginRegistrant
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.appcompat.widget.ActionMenuView
android.support.v4.media.session.MediaSessionCompat$Token
com.google.firebase.analytics.FirebaseAnalytics
com.dexterous.flutterlocalnotifications.models.NotificationDetails
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
androidx.appcompat.view.menu.ActionMenuItemView
com.dexterous.flutterlocalnotifications.models.NotificationAction
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.android.material.timepicker.ClockHandView
com.dexterous.flutterlocalnotifications.RepeatInterval
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.google.firebase.messaging.FirebaseMessagingService
androidx.appcompat.view.menu.ExpandedMenuView
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.android.gms.common.api.internal.BasePendingResult
io.flutter.view.FlutterCallbackInformation
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.google.android.material.button.MaterialButtonToggleGroup
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
androidx.fragment.app.FragmentContainerView
androidx.appcompat.widget.AlertDialogLayout
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.lifecycle.SavedStateHandleController
com.mr.flutter.plugin.filepicker.FilePickerPlugin$LifeCycleObserver
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.android.material.bottomsheet.BottomSheetBehavior
android.support.v4.media.session.MediaSessionCompat$QueueItem
androidx.appcompat.widget.ButtonBarLayout
android.support.v4.media.MediaMetadataCompat
io.flutter.view.AccessibilityViewEmbedder
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.activity.ComponentActivity$3
com.google.android.material.internal.CheckableImageButton
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
androidx.fragment.app.Fragment$5
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.google.android.gms.common.util.DynamiteApi
androidx.media.AudioAttributesImplBaseParcelizer
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.media.AudioAttributesCompat
com.google.android.material.textfield.TextInputLayout
com.google.android.material.sidesheet.SideSheetBehavior
com.google.android.material.timepicker.ClockFaceView
com.google.android.gms.common.api.internal.LifecycleCallback
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.lifecycle.ProcessLifecycleInitializer
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.appcompat.widget.ContentFrameLayout
com.google.android.material.bottomappbar.BottomAppBar$Behavior
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.core.widget.NestedScrollView
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.lifecycle.DefaultLifecycleObserver
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
androidx.appcompat.view.menu.ListMenuItemView
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
androidx.lifecycle.Lifecycling$1
com.google.android.material.appbar.AppBarLayout$Behavior
com.google.android.gms.measurement.AppMeasurementJobService
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.android.gms.common.internal.ReflectedParcelable
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.dexterous.flutterlocalnotifications.models.IconSource
com.google.firebase.FirebaseCommonRegistrar
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.dexterous.flutterlocalnotifications.utils.StringUtils
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
com.google.android.gms.internal.measurement.zzek: boolean zzk
com.google.android.gms.internal.measurement.zzet: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
com.google.android.gms.internal.measurement.zzft: long zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean permissionRequestInProgress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean chronometerCountDown
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.gms.internal.measurement.zzet: boolean zzj
com.google.android.gms.internal.measurement.zzfp: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
com.google.android.gms.internal.measurement.zzgd: long zzN
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Integer titleColor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
com.google.android.gms.internal.measurement.zzfx: long zzg
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
com.google.android.gms.internal.measurement.zzgm: float zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zzY
com.google.android.gms.internal.measurement.zzft: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_FOREGROUND_NOTIFICATION_ACTION
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzV
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int BROWSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String icon
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzfp: boolean zzh
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzio: int zzb
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzn
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzh
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.android.gms.internal.measurement.zzgy: int zzd
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzkm zzj
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.android.gms.internal.measurement.zzgr: int zzd
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzG
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzi
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_RESPONSE_TYPE
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.gms.internal.measurement.zzgk: int zzd
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
com.google.android.gms.internal.measurement.zzfj: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.internal.measurement.zzfx: double zzi
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.internal.measurement.zzgd: long zzl
com.google.android.gms.internal.measurement.zzer: int zzd
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.google.android.gms.internal.measurement.zzek: boolean zzl
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
com.google.android.gms.internal.measurement.zzgd: int zza
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr: int zzd
com.google.android.gms.measurement.internal.zzkw: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ID
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzf
com.google.android.gms.internal.measurement.zzei: boolean zzh
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzkl zzf
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List actionInputs
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.List actions
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
com.google.android.gms.internal.measurement.zzfz: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
com.google.android.gms.internal.measurement.zzgd: long zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String INPUTS
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.android.gms.internal.measurement.zzff: boolean zzl
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
com.google.android.gms.internal.measurement.zzkf: java.util.Map zza
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzg
com.google.android.gms.internal.measurement.zzei: int zzd
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzkm zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.google.android.gms.internal.measurement.zzem: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.google.android.gms.internal.measurement.zzem: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
com.google.android.gms.internal.measurement.zzgm: double zzj
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
com.google.android.gms.internal.measurement.zzff: int zzd
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.google.android.gms.internal.measurement.zzgd: long zzn
com.google.android.gms.internal.measurement.zzgg: int zze
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ALLOW_GENERATED_REPLIES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.google.android.gms.internal.measurement.zzgd: int zzJ
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzkm zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.google.android.gms.internal.measurement.zzfb: boolean zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
kotlinx.coroutines.channels.ArrayChannel: int size
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CALLBACK_HANDLE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.google.android.gms.internal.measurement.zzft: int zzi
com.google.android.gms.internal.measurement.zzek: int zze
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: long zzw
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
com.google.android.gms.internal.measurement.zzgd: long zzx
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfp: int zze
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.android.gms.internal.measurement.zzet: int zzd
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
com.google.android.gms.internal.measurement.zzgd: int zzf
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE
com.google.android.gms.internal.measurement.zzkc: com.google.android.gms.internal.measurement.zzjw zza
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzkm zzd
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzkm zzf
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
com.google.android.gms.internal.measurement.zzfx: int zzd
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
com.google.android.gms.internal.measurement.zzgm: long zze
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzi
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean contextual
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
com.google.android.gms.internal.measurement.zzfv: long zzf
com.google.android.gms.internal.measurement.zzgd: boolean zzz
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.measurement.zzfd: boolean zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zze
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
com.google.android.gms.internal.measurement.zzey: int zze
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean cancelNotification
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zzQ
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
com.google.android.gms.internal.measurement.zzgd: int zzC
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String id
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
com.google.android.gms.internal.measurement.zzet: boolean zzh
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzj
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String UNSUPPORTED_OS_VERSION_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.google.android.gms.internal.measurement.zzgk: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
com.google.android.gms.internal.measurement.zzff: int zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ACTIONS
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft: long zzg
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.google.android.gms.internal.measurement.zzey: boolean zzg
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.gms.internal.measurement.zzkf: int zzd
com.google.android.gms.internal.measurement.zzgy: double zzj
com.google.android.gms.internal.measurement.zzfn: int zzd
com.google.android.gms.internal.measurement.zzgt: int zzd
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String SHOWS_USER_INTERFACE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String title
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_CALLBACK_HANDLE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_BLUE
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
kotlinx.coroutines.CancelledContinuation: int _resumed
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_PERMISSION_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CANCEL_NOTIFICATION
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
com.google.android.gms.internal.measurement.zzgd: long zzm
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHRONOMETER_COUNT_DOWN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_GREEN
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.google.android.gms.internal.measurement.zzek: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.google.android.gms.internal.measurement.zzfh: int zzd
com.google.android.gms.internal.measurement.zzfd: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.google.android.gms.internal.measurement.zzkf: com.google.android.gms.internal.measurement.zzmp zzc
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DISPATCHER_HANDLE
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
com.google.android.gms.internal.measurement.zzgg: int zzd
com.google.android.gms.internal.measurement.zzgd: int zzK
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.android.gms.internal.measurement.zzei: boolean zzi
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.google.android.gms.internal.measurement.zzgy: int zze
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkk zzT
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzkm zzf
com.google.android.gms.internal.measurement.zzfx: float zzh
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzm
com.google.android.gms.internal.measurement.zzfv: int zzd
com.google.android.gms.internal.measurement.zzey: int zzd
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzkm zzg
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.google.android.gms.internal.measurement.zzgd: int zzs
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean showsUserInterface
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_RED
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CONTEXTUAL
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
com.google.android.gms.internal.measurement.zzfb: int zzd
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzae
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int APP
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.internal.measurement.zzfd: int zzh
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ACTION_ID
com.dexterous.flutterlocalnotifications.models.NotificationAction: com.dexterous.flutterlocalnotifications.models.IconSource iconSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.google.android.gms.internal.measurement.zzgy: boolean zzi
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzek: boolean zzh
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int NONE
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzkm zzh
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
com.google.android.gms.internal.measurement.zzer: boolean zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.gms.internal.measurement.zzfr: long zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.google.android.gms.internal.measurement.zzgd: int zze
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
com.google.android.gms.internal.measurement.zzfd: boolean zzg
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
com.google.android.gms.internal.measurement.zzei: int zze
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzkm zzf
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzkm zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzf
com.google.android.gms.internal.measurement.zzff: long zze
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfr: int zze
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzg
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzkm zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zzd
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT_RESULT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzM
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgm: long zzh
com.google.android.gms.internal.measurement.zzgd: long zzU
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_NOTIFICATION
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean allowGeneratedReplies
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.android.gms.internal.measurement.zzgd: int zzI
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
com.google.android.gms.internal.measurement.zzgm: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.google.android.gms.internal.measurement.zzek: boolean zzj
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.measurement.zzgd: long zzB
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
com.google.android.gms.internal.measurement.zzgd: long zzk
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setTextAppearance(int)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: android.view.View getView()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
com.google.android.material.search.SearchBar: float getStrokeWidth()
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.webkit.internal.ApiHelperForOMR1: void startSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.material.internal.BaselineLayout: int getBaseline()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.webkit.internal.ApiHelperForP: void start(android.webkit.TracingController,androidx.webkit.TracingConfig)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat,android.os.Handler)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.google.android.material.chip.Chip: float getChipIconSize()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.webkit.internal.ApiHelperForP: void setDataDirectorySuffix(java.lang.String)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.dexterous.flutterlocalnotifications.models.Time: Time()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.google.android.material.search.SearchBar: void setHint(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.google.android.material.chip.Chip: void setElevation(float)
com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.material.chip.Chip: float getChipMinHeight()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.google.android.material.search.SearchView: float getOverlayElevation()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.core.app.RemoteInput$Api16Impl: void setClipData(android.content.Intent,android.content.ClipData)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver: ActionBroadcastReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.cardview.widget.CardView: void setRadius(float)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.core.app.RemoteInput$Api16Impl: android.content.ClipData getClipData(android.content.Intent)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.android.material.search.SearchBar: android.view.View getCenterView()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.webkit.internal.ApiHelperForOMR1: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.android.material.button.MaterialButton: int getTextHeight()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.google.firebase.iid.Registrar: java.util.List getComponents()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.webkit.internal.ApiHelperForOMR1: void backToSafety(android.webkit.SafeBrowsingResponse,boolean)
com.google.android.material.chip.Chip: void setLines(int)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.webkit.internal.ApiHelperForOMR1: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: void setCheckable(boolean)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.webkit.internal.ApiHelperForOMR1: void proceed(android.webkit.SafeBrowsingResponse,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
androidx.webkit.internal.ApiHelperForM: java.lang.CharSequence getDescription(android.webkit.WebResourceError)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.appcompat.widget.SearchView: int getInputType()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
com.google.android.material.search.SearchBar: int getMenuResId()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.search.SearchView: void setHint(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
androidx.webkit.internal.ApiHelperForM: void close(android.webkit.WebMessagePort)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zznf: com.google.android.gms.internal.measurement.zznf[] values()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.material.card.MaterialCardView: float getProgress()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.webkit.internal.ApiHelperForP: android.webkit.TracingController getTracingControllerInstance()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.google.android.gms.internal.measurement.zzne: com.google.android.gms.internal.measurement.zzne[] values()
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.webkit.internal.ApiHelperForP: android.os.Looper getWebViewLooper(android.webkit.WebView)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.webkit.internal.ApiHelperForO: android.content.pm.PackageInfo getCurrentWebViewPackage()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.google.android.material.card.MaterialCardView: float getRadius()
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.webkit.internal.ApiHelperForM: void postVisualStateCallback(android.webkit.WebView,long,androidx.webkit.WebViewCompat$VisualStateCallback)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
androidx.webkit.internal.ApiHelperForM: void postWebMessage(android.webkit.WebView,android.webkit.WebMessage,android.net.Uri)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.search.SearchBar: void setStrokeColor(int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.material.chip.Chip: float getChipCornerRadius()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.google.android.gms.internal.measurement.zzkq: com.google.android.gms.internal.measurement.zzkq[] values()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface: void onResult(int,android.content.Intent)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode[] values()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.android.material.internal.FlowLayout: int getRowCount()
com.google.android.material.search.SearchBar: float getCompatElevation()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.android.material.button.MaterialButton: int getInsetTop()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.webkit.internal.ApiHelperForP: java.lang.ClassLoader getWebViewClassLoader()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.webkit.internal.ApiHelperForOMR1: void showInterstitial(android.webkit.SafeBrowsingResponse,boolean)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List castList(java.lang.Class,java.util.Collection)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.webkit.internal.ApiHelperForM: void postMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.google.android.material.search.SearchBar: float getCornerSize()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] values()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.android.material.search.SearchView: void setVisible(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.google.android.material.search.SearchBar: void setElevation(float)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.cardview.widget.CardView: int getContentPaddingTop()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.core.app.AlarmManagerCompat$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.webkit.internal.ApiHelperForO: boolean getSafeBrowsingEnabled(android.webkit.WebSettings)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.google.android.material.search.SearchView: int getStatusBarHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setMinLines(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
io.flutter.plugins.webviewflutter.InputAwareWebView: void setContainerView(android.view.View)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.cardview.widget.CardView: float getCardElevation()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.material.chip.Chip: void setChipIconSize(float)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.webkit.internal.ApiHelperForP: boolean stop(android.webkit.TracingController,java.io.OutputStream,java.util.concurrent.Executor)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebAuthnSupport(int)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.constraintlayout.widget.Barrier: void setType(int)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map extractNotificationResponseMap(android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.google.android.material.search.SearchView: void setElevation(float)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.webkit.internal.ApiHelperForO: android.webkit.WebChromeClient getWebChromeClient(android.webkit.WebView)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessagePort[] createWebMessageChannel(android.webkit.WebView)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.search.SearchBar: int getStrokeColor()
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
androidx.webkit.internal.ApiHelperForO: void setSafeBrowsingEnabled(android.webkit.WebSettings,boolean)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.Chip: void setGravity(int)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.google.android.material.search.SearchBar: void setText(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.webkit.internal.ApiHelperForM: int getErrorCode(android.webkit.WebResourceError)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode valueOf(java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.dexterous.flutterlocalnotifications.models.NotificationAction: NotificationAction(java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
androidx.webkit.internal.ApiHelperForM: androidx.webkit.WebMessageCompat createWebMessageCompat(android.webkit.WebMessage)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.cardview.widget.CardView: float getRadius()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.android.material.chip.Chip: void setMaxLines(int)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.android.material.search.SearchView: void setText(int)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.infotaxsquare.lashari.info_tax_square.info_tax_square.MainActivity: MainActivity()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzcb: zzcb()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.webkit.internal.ApiHelperForM: boolean getOffscreenPreRaster(android.webkit.WebSettings)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.firebase.iid.Registrar: Registrar()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.plugins.webviewflutter.InputAwareWebView: void setInputConnectionTarget(android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessage createWebMessage(androidx.webkit.WebMessageCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
androidx.webkit.internal.ApiHelperForM: void setOffscreenPreRaster(android.webkit.WebSettings,boolean)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.fragment.app.Fragment: Fragment()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.android.material.chip.Chip: float getChipEndPadding()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.webkit.internal.ApiHelperForP: boolean isTracing(android.webkit.TracingController)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.search.SearchView: int getSoftInputMode()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.android.material.button.MaterialButton: int getIconGravity()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebViewClient getWebViewClient(android.webkit.WebView)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getCallbackHandle(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzhy getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.google.android.material.search.SearchView: android.text.Editable getText()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebAuthnSupport()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
